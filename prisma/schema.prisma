generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
// ========== ENUMS ==========
//

enum VehicleType {
  Unselected
  Cabrio_Roadster
  Kleinwagen
  Limousine
  Van_Minibus
  Gelaendewagen_Pickup_SUV
  Kombi
  Sportwagen_Coupe
  Andere
}

enum Condition {
  Unselected
  Neu
  Gebraucht
  Jahreswagen
  Oldtimer
  Vorfuehrfahrzeug
}

enum FuelType {
  Unselected
  Benzin
  Diesel
  Elektro
  Ethanol
  Hybrid_Diesel_Elektro
  Hybrid_Benzin_Elektro
  Plug_in_Hybrid
  Wasserstoff
  Autogas_LPG
  Erdgas_CNG
  Andere
}

enum Drivetrain {
  Unselected
  Frontantrieb
  Heckantrieb
  Allrad
}

enum Transmission {
  Unselected
  Automatik
  Halbautomatik
  Schaltgetriebe
}

enum AuditAction {
  CreateCar
  UpdateCar
  DeleteCar

  Login
  Logout

  MarkInquiryRead
  HandleInquiry
  DeleteInquiry
}

//
// ========== MODELS ==========
//

model Car {
  id                 String     @id @default(cuid())
  make               String
  model              String
  vehicleType        VehicleType
  seats              Int
  doors              Int
  condition          Condition
  price              Int
  firstRegistration  String
  mileage            Int
  fuelType           FuelType
  power              Int
  engineCapacity     Int
  drivetrain         Drivetrain
  transmission       Transmission
  vin                String     @unique
  accidentFree       Boolean
  description        String
  sold               Boolean    @default(false)
  visible            Boolean    @default(true)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt

  images             Image[]
  inquiries          Inquiry[]

  admin              Admin?     @relation(fields: [adminId], references: [id])
  adminId            String?

  @@index([visible])      // → ускоряет счётчик доступных машин
  @@index([createdAt])    // → ускоряет «создано за 7 дней»
}

model Image {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())

  car       Car      @relation(fields: [carId], references: [id], onDelete: Cascade)
  carId     String
}

model Admin {
  id         String     @id @default(cuid())
  email      String     @unique
  password   String
  name       String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  auditLogs  AuditLog[]
  cars       Car[]
}

model AuditLog {
  id        String      @id @default(cuid())
  action    AuditAction
  createdAt DateTime    @default(now())

  admin     Admin       @relation(fields: [adminId], references: [id])
  adminId   String

  @@index([createdAt])  // → ускоряет выборку «последние 20 действий»
}

model Inquiry {
  id         String   @id @default(uuid())
  carId      String
  car        Car      @relation(fields: [carId], references: [id])
  name       String
  email      String
  phone      String?
  message    String
  isRead     Boolean  @default(false)
  isHandled  Boolean  @default(false)
  createdAt  DateTime @default(now())

  @@index([isHandled])  // → ускоряет счётчик необработанных заявок
}
