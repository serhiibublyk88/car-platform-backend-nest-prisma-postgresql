// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========== ENUMS ==========

enum VehicleType {
  Unselected
  Cabrio_Roadster
  Kleinwagen
  Limousine
  Van_Minibus
  Gelaendewagen_Pickup_SUV
  Kombi
  Sportwagen_Coupe
  Andere
}

enum Condition {
  Unselected
  Neu
  Gebraucht
  Jahreswagen
  Oldtimer
  Vorfuehrfahrzeug
}

enum FuelType {
  Unselected
  Benzin
  Diesel
  Elektro
  Ethanol
  Hybrid_Diesel_Elektro
  Hybrid_Benzin_Elektro
  Plug_in_Hybrid
  Wasserstoff
  Autogas_LPG
  Erdgas_CNG
  Andere
}

enum Drivetrain {
  Unselected
  Frontantrieb
  Heckantrieb
  Allrad
}

enum Transmission {
  Unselected
  Automatik
  Halbautomatik
  Schaltgetriebe
}

// ========== MODELS ==========

model Car {
  id                String       @id @default(cuid())
  make              String
  model             String
  vehicleType       VehicleType
  seats             Int
  doors             Int
  condition         Condition
  price             Int
  firstRegistration String
  mileage           Int
  fuelType          FuelType
  power             Int
  engineCapacity    Int
  drivetrain        Drivetrain
  transmission      Transmission
  vin               String       @unique
  accidentFree      Boolean
  description       String
  sold              Boolean      @default(false)
  visible           Boolean      @default(true)
  createdAt         DateTime     @default(now())
  updatedAt         DateTime     @updatedAt

  images    Image[]
  inquiries Inquiry[]

  admin   Admin?  @relation(fields: [adminId], references: [id])
  adminId String?
}

model Image {
  id        String   @id @default(cuid())
  url       String
  createdAt DateTime @default(now())

  car   Car    @relation(fields: [carId], references: [id], onDelete: Cascade)
  carId String
}

model Inquiry {
  id        String   @id @default(cuid())
  message   String
  phone     String?
  email     String?
  createdAt DateTime @default(now())

  car   Car    @relation(fields: [carId], references: [id])
  carId String
}

model Admin {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  auditLogs AuditLog[]
  cars      Car[]
}

model AuditLog {
  id        String   @id @default(cuid())
  action    String
  createdAt DateTime @default(now())

  admin   Admin  @relation(fields: [adminId], references: [id])
  adminId String
}
